apiVersion: v1
kind: Template
metadata:
  name: launchpad-builder
  annotations:
    description: This template creates a Build Configuration using an S2I builder.
    tags: instant-app
parameters:
  - name: SOURCE_REPOSITORY_URL
    description: The source URL for the application
    displayName: Source URL
    required: true
  - name: SOURCE_REPOSITORY_REF
    description: The branch name for the application
    displayName: Source Branch
    value: master
    required: true
  - name: SOURCE_REPOSITORY_DIR
    description: The location within the source repo of the application
    displayName: Source Directory
    value: .
    required: true
  - name: RELEASE_VERSION
    description: The location within the source repo of the application
    displayName: release version
    value: 0.0.1
  - name: SUFFIX_NAME
    description: The location within the source repo of the application
    displayName: suffix name
    value: ''
objects:
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: golang-http-crud
    spec: {}
  - apiVersion: v1
    kind: ImageStream
    metadata:
      name: runtime
    spec:
      tags:
        - name: latest
          from:
            kind: DockerImage
            name: 'centos/go-toolset-7-centos7:latest'
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      name: golang-http-crud
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: 'golang-http-crud:${RELEASE_VERSION}'
      postCommit: {}
      resources: {}
      source:
        git:
          uri: '${SOURCE_REPOSITORY_URL}'
          ref: '${SOURCE_REPOSITORY_REF}'
        type: Git
      strategy:
        type: Source
        sourceStrategy:
          from:
            kind: ImageStreamTag
            name: 'runtime:latest'
    status:
      lastVersion: 0
  - apiVersion: v1
    kind: Service
    spec:
      ports:
        - protocol: TCP
          port: 8080
          targetPort: 8080
      type: ClusterIP
      selector:
        project: golang-http-crud
    metadata:
      name: golang-http-crud
      labels:
        expose: 'true'
        project: golang-http-crud
        version: '${RELEASE_VERSION}'
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      name: golang-http-crud
      labels:
        app: golang-http-crud
        project: golang-http-crud
        version: '${RELEASE_VERSION}'
    spec:
      template:
        spec:
          containers:
            - env:
              readinessProbe:
                httpGet:
                  path: /api/fruits
                  port: 8080
                  scheme: HTTP
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 5
                successThreshold: 1
                timeoutSeconds: 1
              livenessProbe:
                httpGet:
                  path: /api/fruits
                  port: 8080
                  scheme: HTTP
                failureThreshold: 2
                initialDelaySeconds: 60
                periodSeconds: 3
                successThreshold: 1
                timeoutSeconds: 1
              image: 'golang-http-crud:${RELEASE_VERSION}'
              name: golang-http-crud
              securityContext:
                privileged: false
              ports:
                - containerPort: 8080
                  name: http
                  protocol: TCP
        metadata:
          labels:
            app: golang-http-crud
            project: golang-http-crud
            version: '${RELEASE_VERSION}'
      replicas: 1
      selector:
        app: golang-http-crud
        project: golang-http-crud
      triggers:
        - type: ConfigChange
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - golang-http-crud
            from:
              kind: ImageStreamTag
              name: 'golang-http-crud:${RELEASE_VERSION}'
  - apiVersion: v1
    kind: Route
    spec:
      to:
        kind: Service
        name: golang-http-crud
      port:
        targetPort: 8080
    metadata:
      name: golang-http-crud
      labels:
        project: golang-http-crud
        version: '${RELEASE_VERSION}'
